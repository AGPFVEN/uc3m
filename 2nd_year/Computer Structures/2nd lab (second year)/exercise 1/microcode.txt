##
## Microcode Section
##

begin
{
   fetch: (T2, C0),
          (TA, R, BW=11, M1=1, C1=1),
          (M2, C2, T1, C3),
          (A0, B=0, C=0)
}

#
# ALU
#
la  reg addr {
    co=010001,
    nwords=2,
	reg=reg(25,21),
    addr=address(63,32)abs,
    help='r1 = addr/32',
    {
        (T2, C0),
        (TA, R, BW=11, M1=1, C1),
        (M2, C2, T1, LC, MR=0, SELC=10101, A0, B, C=0)
    }
}

lc	reg1 reg2 (reg3) {
  	co=010011,
    nwords=1,
    reg1=reg(25,21),
    reg2=reg(20,16),
    reg3=reg(15,11),
    {
        (MR=0, SELA=01011, T9, C0, C4),
        (TA, R, BW=11, M1=1, C1, MA=1, MB=10, SELCOP=01010, MC, T6, C0, SELP=11, M7=1, C7),
        (TA, R, BW=11, M1=1, C1, T1, LC, MR=0, SELC=10101, SE),
        (T1, LC, MR=0, SELC=10000, SE, A0, B, C=0)
	}
}

addc reg1 reg2 reg3 reg4 {
    co=010100,
    nwords=1, 
    reg1=reg(25,21),
    reg2=reg(20,16),
    reg3=reg(15,11),
    reg4=reg(10, 6),
    {
        (MR=0, SELA=10101, MA=0, SELB=01011, MB=00, SELCOP=1010, MC, T6, SELC=10101, LC, SELP=11, M7, C7),
        (MR=0, SELA=10000, MA=0, SELB=00110, MB=00, SELCOP=1010, MC, T6, SELC=10000, LC, SELP=11, M7, C7, A0, B, C=0)
    }
}

mulc reg1 reg2 reg3 reg4 {
    co=010101,
    nwords=1, 
    reg1=reg(25,21),
    reg2=reg(20,16),
    reg3=reg(15,11),
    reg4=reg(10, 6),
    {
        (MR=0, SELA=10101, MA=0, SELB=01011, MB=00, SELCOP=1100, MC, T6, C4, SELP=11, M7, C7),      #RT1  <- reg1 * reg3
        (MR=0, SELA=10000, MA=0, SELB=00110, MB=00, SELCOP=1100, MC, T6, C5, SELP=11, M7, C7),      #RT2  <- reg2 * reg4
        (MA=1, MB=01, SELCOP=1011, MC, SELP=11, M7, C7, C6),                                        #RT3  <- RT1 - RT2
        (MR=0, SELA=10101, MA=0, SELB=00110, MB=00, SELCOP=1100, MC, T6, C4, SELP=11, M7, C7),      #RT1  <- reg1 * reg4
        (MR=0, SELA=10000, MA=0, SELB=01011, MB=00, SELCOP=1100, MC, T6, C5, SELP=11, M7, C7),      #RT2  <- reg2 * reg3
        (MA=1, MB=01, SELCOP=1010, MC, SELP=11, M7, C7, T6, SELC=10000, LC),                        #reg2 <- RT1 + RT2
        (T7, LC, SELC=10101, A0, B, C=0)                                                            #reg1 <- RT3
    }
}

hcf {
    co=100011,
    nwords=1,
    {
        (EXCODE=0, T11, M2=0, C2, M7, C7, A0, B, C=0)
    }
}

beqc reg1 reg2 reg3 reg4 offset {
    co=110100,
    nwords=1,
    reg1=reg(25,21),
    reg2=reg(20,16),
    reg3=reg(15,11),
    reg4=reg(10, 6),
    offset=address(5,0)rel,
    help='if ($r1 == $r2) pc += offset',
    {
             (T8, C5),
             (SELA=10101, SELB=01011, MC=1, SELCOP=1011, SELP=11, M7, C7),
             (A0=0, B=1, C=110, MADDR=bck2ftch),
             (SELA=10000, SELB=00110, MC=1, SELCOP=1011, SELP=11, M7, C7),
             (A0=0, B=1, C=110, MADDR=bck2ftch),
             (T5, M7=0, C7),
             (T2, C4),
             (SE=1, OFFSET=0, SIZE=10000, T3, C5),
             (MA=1, MB=1, MC=1, SELCOP=1010, T6, C2, A0=1, B=1, C=0),
   bck2ftch: (T5, M7=0, C7),
             (A0, B, C=0)
    }
}

call addr {
    co=100001,
    nwords=1,
    addr=address(19, 0)rel,
    help='ra <- pc, pc <- addr',
    {
        (T2, MR=1, SELC=00001, LC),
        (SE, SIZE=10100, OFFSET=0, T3, M2=1, C2, A0, B, C=0)
    }
}

ret {
    co=100010,
    nwords=1,
    help='pc <- ra'
    {
        (MR=1, SELA=00001, T9, M2=0, C2, A0, B, C=0)
    }
}

sc reg1, reg2, (reg3) {
    co=010010,
    nwords=1,
    reg1=reg(25,21),
    reg2=reg(20,16),
    reg3=reg(15,11),
    {
        (MR=0, SELA=01011, T9, C0, C4),
        (MR=0, SELA=10101, T9, M1=0, C1),
        (BW=11, TA, TD, W, MA=1, MB=10, SELCOP=1010, MC=1, T6, C0),
        (MR=0, SELA=10000, T9, M1=0, C1),
        (BW=11, TA, TD, W, A0, B, C=0)
    }
}
##
## Register Section
##
registers
{
    0=(zero,  x0),
    1=(ra,    x1),
    2=(sp,    x2) (stack_pointer),
    3=(gp,    x3),
    4=(tp,    x4),
    5=(t0,    x5),
    6=(t1,    x6),
    7=(t2,    x7),
    8=(s0,    x8),
    9=(s1,    x9),
    10=(a0,  x10),
    11=(a1,  x11),
    12=(a2,  x12),
    13=(a3,  x13),
    14=(a4,  x14),
    15=(a5,  x15),
    16=(a6,  x16),
    17=(a7,  x17),
    18=(s2,  x18),
    19=(s3,  x19),
    20=(s4,  x20),
    21=(s5,  x21),
    22=(s6,  x22),
    23=(s7,  x23),
    24=(s8,  x24),
    25=(s9,  x25),
    26=(s10, x26),
    27=(s11, x27),
    28=(t3,  x28),
    29=(t4,  x29),
    30=(t5,  x30),
    31=(t6,  x31)
}