Rules:
    only usable:
        pthread_create
        pthread_join
        pthread_exit
    
    For synchronization:
        mutex
        conditional variables

Tasks:
    Operations (CREATE, DEPOSIT, WITHDRAW, BALANCE, TRANSFER)

    Bank (Main thread):
        1. Read input
        2. Create ATMs and Workers
        3. Create global variables 
            client_numop (initialized to zero, increment when customer perform operation)
            bank_numop (initialized to zero, increment when worker perform operation)
            global_balance (initialized to zero, updated with operations performed, can be positive or negative)
        4. list_client_ops (loading list of operations, from file into memmory)
        5. Launch ATMs and Workers
        6. Wait for completition

    ATM (function executed by threads, reads operations from files, add element to circular queue)
        1. Obtain operations from list_client_ops
        2. Increment client_numop
        3. insert operation in circular queue
        4. This must be concurrent with the other ATMs and workers

    Worker (function executed by threads, extract elements from circualr queue, perform action)
        1. Increment bank_numop
        2. Exctract operation from queue with that numfa-border
        3. For each extracted element perform the operation
        4. Print (type of operation, parameters and bank balance)
        5. once all customer operations have been proccessed, each thread will end its execution

./bank <file name> <num ATMs> <num workers> <max accounts> <buff size>

./bank file.txt 3 3 20 60

DOING: Bank (1)
Resume: How can I read each line of the file ?

1 CREATE 1 BALANCE=0 TOTAL=0
2 DEPOSIT 1 100 BALANCE=100 TOTAL=100
3 CREATE 2 BALANCE=0 TOTAL=100
4 DEPOSIT 2 50 BALANCE=50 TOTAL=150
5 TRANSFER 1 2 30 BALANCE=70 TOTAL=150
6 TRANSFER 2 1 20 BALANCE=60 TOTAL=150
7 WITHDRAW 1 40 BALANCE=50 TOTAL=110
8 WITHDRAW 2 60 BALANCE=0 TOTAL=50
9 BALANCE 1 BALANCE=50 TOTAL=50
10 BALANCE 2 BALANCE=0 TOTAL=50
11 CREATE 3 BALANCE=0 TOTAL=50
12 DEPOSIT 3 20 BALANCE=20 TOTAL=70
13 CREATE 4 BALANCE=0 TOTAL=70
14 DEPOSIT 4 500 BALANCE=500 TOTAL=570
15 TRANSFER 3 4 10 BALANCE=10 TOTAL=570
16 TRANSFER 4 3 200 BALANCE=310 TOTAL=570
17 WITHDRAW 3 5 BALANCE=205 TOTAL=565
18 WITHDRAW 4 100 BALANCE=210 TOTAL=465
19 BALANCE 3 BALANCE=205 TOTAL=465
20 BALANCE 4 BALANCE=210 TOTAL=465
21 CREATE 5 BALANCE=0 TOTAL=465
22 DEPOSIT 5 1000 BALANCE=1000 TOTAL=1465
23 CREATE 6 BALANCE=0 TOTAL=1465
24 DEPOSIT 6 250 BALANCE=250 TOTAL=1715
25 TRANSFER 5 6 600 BALANCE=400 TOTAL=1715
26 TRANSFER 6 5 150 BALANCE=700 TOTAL=1715
27 WITHDRAW 5 80 BALANCE=470 TOTAL=1635
28 WITHDRAW 6 300 BALANCE=400 TOTAL=1335
29 BALANCE 5 BALANCE=470 TOTAL=1335
30 BALANCE 6 BALANCE=400 TOTAL=1335
31 CREATE 7 BALANCE=0 TOTAL=1335
32 DEPOSIT 7 300 BALANCE=300 TOTAL=1635
33 CREATE 8 BALANCE=0 TOTAL=1635
34 DEPOSIT 8 30 BALANCE=30 TOTAL=1665
35 TRANSFER 7 8 25 BALANCE=275 TOTAL=1665
36 TRANSFER 8 7 50 BALANCE=5 TOTAL=1665
37 WITHDRAW 7 250 BALANCE=75 TOTAL=1415
38 WITHDRAW 8 5 BALANCE=0 TOTAL=1410
39 BALANCE 7 BALANCE=75 TOTAL=1410
40 BALANCE 8 BALANCE=0 TOTAL=1410
41 CREATE 9 BALANCE=0 TOTAL=1410
42 DEPOSIT 9 300 BALANCE=300 TOTAL=1710
43 CREATE 10 BALANCE=0 TOTAL=1710
44 DEPOSIT 10 30 BALANCE=30 TOTAL=1740
45 TRANSFER 9 10 25 BALANCE=275 TOTAL=1740
46 TRANSFER 10 9 50 BALANCE=5 TOTAL=1740
47 WITHDRAW 9 250 BALANCE=75 TOTAL=1490
48 WITHDRAW 10 5 BALANCE=0 TOTAL=1485
49 BALANCE 9 BALANCE=75 TOTAL=1485
50 BALANCE 10 BALANCE=0 TOTAL=1485